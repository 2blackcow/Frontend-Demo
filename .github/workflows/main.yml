name: Vue.js CI/CD Workflow

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main

jobs:
  # Pull Request 시 테스트 및 빌드 작업
  build-and-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test  # 테스트 스크립트 실행

      - name: Build project
        run: npm run build

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse CI
        run: lhci autorun  # 기본 설정으로 Lighthouse CI 실행

  # Push 시 빌드 및 배포 작업 (브랜치에 따라 스테이징/프로덕션 배포)
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      # Staging 배포 설정 (GitHub Pages)
      - name: Deploy to Staging (GitHub Pages)
        if: github.ref == 'refs/heads/staging'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}  # MY_GITHUB_TOKEN 사용
          publish_dir: ./dist

      # Production 배포 설정 (GitHub Pages)
      - name: Deploy to Production (GitHub Pages)
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}  # MY_GITHUB_TOKEN 사용
          publish_dir: ./dist
